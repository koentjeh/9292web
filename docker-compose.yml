version: '3'

networks:
    laravel:

services: 
    nginx:
        image: nginx:stable-alpine
        container_name: nginx
        ports: 
            - "8080:80"
        volumes:
            - ./src:/var/www/html
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - php
            - mysql
        networks: 
            - laravel

    mysql:
        image: mysql:8.0.20
        container_name: mysql
        restart: unless-stopped
        tty: true
        ports:
            - "3306"
        volumes: 
            - ./mysql:/var/lib/mysql
        env_file:
            - ./src/.env
        environment:
            - MYSQL_DATABASE=$${DB_DATABASE}
            - MYSQL_USER=$${DB_USERNAME}
            - MYSQL_PASSWORD=$${$DB_PASSWORD}
            - MYSQL_ROOT_PASSWORD=$${DB_PASSWORD}
            - SERVICE_TAGS=dev
            - SERVICE_NAME=mysql
        networks: 
            - laravel
        
    php:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: php
        volumes: 
            - ./src:/var/www/html
        ports: 
            - "9000:9000"
        networks: 
            - laravel

    composer:
        image: composer:latest
        container_name: composer
        volumes: 
            - ./src:/var/www/html
        working_dir: /var/www/html
        depends_on: 
            - php
        networks: 
            - laravel

    npm:
        image: node:latest
        container_name: npm
        volumes:
            - ./src:/var/www/html
        working_dir: /var/www/html
        entrypoint: ['npm']

    artisan:
        build: 
            context: .
            dockerfile: Dockerfile
        container_name: artisan
        volumes: 
            - ./src:/var/www/html
        depends_on: 
            - mysql
        working_dir: /var/www/html
        entrypoint: ['php', '/var/www/html/artisan']
        networks: 
            - laravel
