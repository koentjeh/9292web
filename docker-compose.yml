version: '3'

services: 
    nginx:
        container_name: nginx
        image: nginx:stable-alphine
        ports: 
            - "8080:80"
        volumes:
            - ./src:/var/www/html
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - php
            - mysql
        networks: 
            - laravel

    mysql:
        container_name: mysql
        image: mysql:8.0.20
        restart: unless-stopped
        tty: true
        ports:
            - "3306:3306"
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${$DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        networks: 
            - laravel
        
    php:
        container_name: php
        build:
            context: .
            dockerfile: dockerfile
        volumes: 
            - ./src:/var/www/html
        ports: 
            - "9000:9000"
        networks: 
            - laravel

    composer:
        container_name: composer
        image: composer:latest
        volumes: 
            - ./src:/var/www/html
        working_dir: /var/www/html
        depends_on: 
            - php
        networks: 
            - laravel

    artisan:
        container_name: artisan
        build: 
            context: .
            dockerfile: Dockerfile
        volumes: 
            - ./src:/var/www/html
        depends_on: 
            - mysql
        working_dir: /var/www/html
        entrypoint: ['php', 'var/www/html/artisan']
        networks: 
            - laravel

networks:
    laravel:
